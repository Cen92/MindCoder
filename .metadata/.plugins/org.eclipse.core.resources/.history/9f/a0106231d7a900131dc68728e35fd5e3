package main.tl;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import main.tl.parser.TLLexer;
import main.tl.parser.TLParser;
import main.tl.parser.TLTreeWalker;
import main.tl.tree.TLNode;

import org.antlr.runtime.ANTLRFileStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.tree.CommonTree;
import org.antlr.runtime.tree.CommonTreeNodeStream;

import android.content.Context;
import android.content.res.AssetManager;

public class Main {
  public static void main(String[] args) throws Exception {
    // create an instance of the lexer//

	 //testing 
	
//	  String path = "../assets/FunctionsTest.tl";
//	  File file = new File("FunctionsTest.tl");
//	  String filePath = file.getCanonicalPath();
//	  System.out.println(filePath);
	  TLLexer lexer = new TLLexer(new ANTLRFileStream(path));
        
    // wrap a token-stream around the lexer
    CommonTokenStream tokens = new CommonTokenStream(lexer);
        
    // create the parser
    TLParser parser = new TLParser(tokens);
    
    // walk the tree
    CommonTree tree = (CommonTree)parser.parse().getTree();
    CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
    
    // pass the reference to the Map of functions to the tree walker
    TLTreeWalker walker = new TLTreeWalker(nodes, parser.functions);
    
    // get the returned node 
    TLNode returned = walker.walk();
    System.out.println(returned == null ? "null" : returned.evaluate());
  }
}
