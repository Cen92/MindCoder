package main.tl;

import java.io.File;

import main.tl.parser.TLLexer;
import main.tl.parser.TLParser;
import main.tl.parser.TLTreeWalker;
import main.tl.tree.TLNode;

import org.antlr.runtime.ANTLRFileStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.tree.CommonTree;
import org.antlr.runtime.tree.CommonTreeNodeStream;

public class Main {
  public static void main(String[] args) throws Exception {
    // create an instance of the lexer
	  File file = new File("assets/FunctionsTest.tl");
	  String filePath = file.getAbsolutePath();
	  System.out.println(file);
	  TLLexer lexer = new TLLexer(new ANTLRFileStream(filePath));
        
    // wrap a token-stream around the lexer
    CommonTokenStream tokens = new CommonTokenStream(lexer);
        
    // create the parser
    TLParser parser = new TLParser(tokens);
    
    // walk the tree
    CommonTree tree = (CommonTree)parser.parse().getTree();
    CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
    
    // pass the reference to the Map of functions to the tree walker
    TLTreeWalker walker = new TLTreeWalker(nodes, parser.functions);
    
    // get the returned node 
    TLNode returned = walker.walk();
    System.out.println(returned == null ? "null" : returned.evaluate());
  }
}
